openapi: 3.0.0
info:
  title: Simple SNS API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /hello:
    get:
      summary: Returns a greeting message
      responses:
        200:
          description: A greeting message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /posts:
    get:
      summary: Get all posts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost'
      responses:
        '201':
          description: Post created
  /posts/{id}:
    get:
      summary: Get a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /posts/{id}/likes:
    post:
      summary: Like a post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Like added
    delete:
      summary: Unlike a post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Like removed
  /posts/{id}/comments:
    get:
      summary: Get all comments for a post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      summary: Add a comment to a post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComment'
      responses:
        '201':
          description: Comment added
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        createdAt:
          type: string
          format: date-time
    Post:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    CreatePost:
      type: object
      properties:
        userId:
          type: integer
        content:
          type: string
    Comment:
      type: object
      properties:
        id:
          type: integer
        postId:
          type: integer
        userId:
          type: integer
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    CreateComment:
      type: object
      properties:
        userId:
          type: integer
        content:
          type: string
